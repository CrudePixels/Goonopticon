name: Build and Release Extension

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.4.0, v1.5.0, etc.
  workflow_dispatch:  # Allow manual triggering

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build extension
      run: npm run build
      
    - name: Create extension package
      run: |
        mkdir -p dist
        cp -r CSS dist/
        cp -r HTML dist/
        mkdir -p dist/JS/bundle
        cp -r JS/bundle/* dist/JS/bundle/
        cp -r Resources dist/
        cp manifest.json dist/
        cp package.json dist/
        cp README.md dist/
        # Verify the file structure
        echo "Verifying file structure:"
        ls -la dist/
        ls -la dist/JS/
        ls -la dist/JS/bundle/
        
        cd dist
        zip -r ../goonopticon-extension.zip .
        cd ..
        ls -la goonopticon-extension.zip
        
    - name: Verify package creation
      run: |
        if [ ! -f "goonopticon-extension.zip" ]; then
          echo "Error: goonopticon-extension.zip was not created"
          exit 1
        fi
        echo "Package created successfully"
        
    - name: Extract version from package.json
      id: version
      run: |
        VERSION=$(node -p "require('./package.json').version")
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "tag=v$VERSION" >> $GITHUB_OUTPUT
        
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.version.outputs.tag }}
        name: Goonopticon ${{ steps.version.outputs.tag }}
        body: |
          ## Goonopticon ${{ steps.version.outputs.tag }}
          
          ### What's New
          - Fixed webpack bundling errors that caused "is not a function" runtime errors
          - Fixed "Cb is not a function" errors in LogDev callback handling
          - Fixed "D is not a function", "n is not a function", "o is not a function", and "r is not a function" errors
          - Disabled webpack minification to prevent problematic variable binding patterns
          - Added proper type checking for callback functions to prevent runtime errors
          - Enhanced extension stability and reliability
          - Fixed GitHub Actions workflow file structure for proper extension packaging
          - Improved release process to ensure correct file organization
          - Enhanced extension installation reliability
          
          ### Installation
          1. Download the `goonopticon-extension.zip` file
          2. Extract the zip file
          3. Open Chrome/Edge and go to `chrome://extensions/`
          4. Enable "Developer mode"
          5. Click "Load unpacked" and select the extracted folder
          
          ### Files
          - `goonopticon-extension.zip` - Complete extension package
        files: goonopticon-extension.zip
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
